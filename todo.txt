Implement payment model:
    A button on the left side of the canvas that the player can click. It will open a menu over the canvas, where the player can select what item to buy.
    Items to buy: Probably a flex container of different attributes, like big head, big arm, big leg.

React components- need 5 of them. Turn game canvases (1), game instructuion + images (2), payment model (3), and player display (4) into react components.
Could the fifth be the nav bar?

Implement middleware status codes working.

Delete request account when refreshing so it doesn't log back in?

Make canvas only react to inputs when it is the focus. When typing changePasword it'll affect it. Or, implement pause feature. probably not necessary unless I want to display components on top of canvas.

Turn into cloud and fly offscreen like in Bob's game.

Make audio volume decrease when you're near yellow button.

With current middleware setup: if you refresh the page, it doesn't log you out. If you refresh the page, it'll load your account from your req.account.session. 
This means it won't save your items if you refresh rather than save and quit, and because of initGame it'll reload you into your current account.
It'll use the saved req.session.account rather than loading the one from the server.
Should I load it from server, or save it to account at the specific time?
Should refreshing just log them out? Domo would keep you logged in, but this is a one-person application.

DONE Implement change password:
    Changing password will require user to enter their username, password, and new password. It'll send code to the server to update that. That'll use some bcrypt nuances...
    Check on client if the two passwords are different.
    Use same kind of function as updateItems in Account controller.

GOOD Improve styling of log in button (formSubmit)
    Make sure it uses no code from Domo-change colors, and borders if I want to.

DONE Fix item saving.
    It is not actually saving on the server. The .save() function doesn't actually save to the mongoDB.